привет! ты - высококлассный разработчик веб приложений
вот структура проекта:
*Цель веб-сервиса:*  
Создать сайт для репетитора Евгении Владимировны, который поможет упорядочить процесс обучения её учеников, предоставит удобный доступ к информации об успехах детей, а также упростит коммуникацию между репетитором, учениками и их родителями.
*Целевая аудитория:*  
- Родители учеников Евгении Владимировны.  
- Ученики Евгении Владимировны.  
*Основные функции и ценность для пользователя:*  
- Хранение и просмотр дипломов, достижений и успехов учеников.  
- Чат для общения с репетитором.  
- Просмотр информации о репетиторе (награды, дипломы, образование).  
- Удобный доступ к данным о своих детях для родителей.  
---
### 2) Анализ и исследования
*Анализ конкурентов:*  
- Конкуренты: социальные сети (например, ВКонтакте, Instagram).  
  - Плюсы: уже разработаны, популярны, не требуют дополнительных затрат на разработку.  
  - Минусы: Евгении Владимировне неудобно ими пользоваться, отсутствие специализированных функций для репетиторства.  
*Анализ технических ограничений:*  
- Использование облачного сервера для хранения данных (нет возможности поддерживать собственный сервер).  
- Сайт должен быть простым в использовании и не требовать сложной настройки.  
---
### 3) Определение требований безопасности, производительности, надежности
*Безопасность:*  
- Минимальные требования к безопасности (по просьбе заказчика).  
- Данные не являются конфиденциальными, поэтому шифрование и сложные механизмы защиты не требуются.  
*Производительность:*  
- Поддержка до 500 пользователей одновременно (в реальности ожидается меньше).  
*Надёжность:*  
- Данные хранятся на облачном сервере, что обеспечивает их доступность и целостность.  
- Отсутствие критически важных данных позволяет не беспокоиться о резервном копировании.  
---
### 4) Проектирование пользовательского опыта (UX) и интерфейса (UI)
*Разработка пользовательских сценариев (User Flow):*  
- *Сценарий 1: Авторизация.*  
  - Пользователь вводит имя и фамилию, система предлагает выбрать из списка или зарегистрироваться.  
- *Сценарий 2: Регистрация.*  
  - Пользователь вводит данные, система сохраняет их в БД.  
- *Сценарий 3: Просмотр успехов ребёнка.*  
  - Пользователь выбирает ребёнка и просматривает его достижения.  
- *Сценарий 4: Просмотр достижений по предметам.*  
  - Пользователь выбирает предмет и видит соответствующие дипломы и фото.  
- *Сценарий 5: Чат с репетитором.*  
  - Пользователь открывает чат или переходит по ссылке на Telegram.  
- *Сценарий 6: Просмотр информации о репетиторе.*  
  - Пользователь переходит на страницу с данными Евгении Владимировны.  
*Создание мокапов / wireframe-ов интерфейсов:*  
- Главная страница с кнопками: "Авторизация", "Предметы", "Успехи", "Чат", "О репетиторе".  
- Страница авторизации с полями для ввода имени и фамилии.  
- Страница с достижениями ученика (фото, дипломы, описания).  
- Страница с информацией о репетиторе (фото, награды, образование).  
*Прототипирование интерфейса:*  
- Использование Figma для создания прототипов.  
- Пример:  
  - Главная страница: логотип, навигационное меню, кнопка чата.  
  - Страница авторизации: форма ввода, кнопка "Зарегистрироваться".  
  - Страница успехов: список детей, фото, дипломы.  
---
### 5) Определение архитектуры
*Выбор технологий:*  
- *Frontend:* Vue.js (простота и удобство для создания интерактивных интерфейсов).  
- *Backend:* Flask (лёгкий и подходящий для небольших проектов).  
- *База данных:* PostgreSQL (надёжная и подходящая для хранения структурированных данных).  
*Структура данных:*  
- Таблицы:  
  - Пользователи (id, имя, фамилия, ребёнок_id).  
  - Дети (id, имя, фамилия, достижения).  
  - Достижения (id, ребёнок_id, предмет, описание, фото).  
  - Информация о репетиторе (id, фото, награды, образование).  
*Схема взаимодействия компонентов:*  
- Клиент (браузер) ↔ Frontend (Vue.js) ↔ Backend (Flask) ↔ База данных (PostgreSQL).  
---
### 6) Формирование требований и написание ТЗ
*Функциональные требования:*  
1. Возможность авторизации и регистрации пользователей.  
2. Хранение и отображение данных о достижениях учеников.  
3. Чат для общения с репетитором (или ссылка на Telegram).  
4. Просмотр информации о репетиторе.  
5. Удобная навигация по сайту.  
*Нефункциональные требования:*  
1. Поддержка до 500 пользователей одновременно.  
2. Минимальные требования к безопасности.  
3. Данные хранятся на облачном сервере.  
*Описание API:*  
- GET /api/children — список детей.  
- GET /api/children/{id}/achievements — достижения ребёнка.  
- GET /api/tutor — информация о репетиторе.  
- POST /api/register — регистрация пользователя.  
- POST /api/login — авторизация пользователя.  
*Этапы разработки:*  
1. Проектирование интерфейса (Figma).  
2. Разработка frontend (Vue.js).  
3. Разработка backend (Flask).  
4. Настройка базы данных (PostgreSQL).  
5. Тестирование и запуск.  
*Возможные риски:*  
- Низкая активность пользователей.  
- Проблемы с облачным хостингом.  
- Недостаточная производительность при увеличении числа пользователей. 
вот структура файла проекта:
/project
  /templates
    base_dark.html
    base_light.html
    first_page.html
    grupp.html
    login.html
    index.html
    block.html
    secret_page.html
  /spice
    /music
    /math
    admins.txt
  /static
  server.py

по расположению /progect/server.py находится код:

from flask import Flask, render_template, session, redirect, abort, request
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.secret_key = '228228228228'
# Настройка подключения к PostgreSQL
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://zavric228:Ilusha12@localhost/tutor_db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)
class Admin(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    password = db.Column(db.String(50), nullable=False)
class Child(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    achievements = db.relationship('Achievement', backref='child', lazy=True)
class Achievement(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    child_id = db.Column(db.Integer, db.ForeignKey('child.id'), nullable=False)
    subject = db.Column(db.String(50), nullable=False)
    description = db.Column(db.Text, nullable=False)
    image_url = db.Column(db.String(200), nullable=False)

with app.app_context():
    db.create_all()
    admins = {'Евгения Владимировна': 'Ilusha12'}
    for username, password in admins.items():
        existing_admin = Admin.query.filter_by(username=username).first()
        if not existing_admin:
            admin = Admin(username=username, password=password)
            db.session.add(admin)
    db.session.commit()
@app.route('/')
def index():
    if 'theme' not in session:
        session['theme'] = 'math'
    if 'name' not in session:
        session['name'] = '[имя не определено]'
    if 'theem' not in session:
        session['theem'] = 'light'
    return render_template('index.html', theme=session['theme'], name=session['name'], theem=session['theem'])
@app.route('/login')
def login():
    return render_template('login.html')
@app.route('/login', methods=['POST'])
def login_post():
    log = request.form.get('log')
    if not log:
        return render_template('login.html', mis=1)
    admin = Admin.query.filter_by(username=log).first()
    if admin:
        session['secret_id'] = True
        return redirect(f'/secret/{log}')
    session['secret_id'] = False
    session['name'] = log
    return redirect('/')
@app.route('/gr/<string:group>')
def gr(group):
    if group not in ['math', 'music', 'plants']:
        return render_template('404.html'), 404
    session['theme'] = group
    return redirect('/')
@app.route('/gr/<string:group>/bl/<string:block>')
def bl(group, block):
    if group not in ['math', 'music', 'plants']:
        return render_template('404.html'), 404
    themes = ['theme1', 'theme2', 'theme3']
    if block not in themes:
        return render_template('404.html'), 404
    return render_template('block.html', group=group, block=block)
@app.route('/logout')
def logout():
    session.clear()
    return redirect('/')
@app.route('/dark')
def dark_theem():
    session['theem'] = 'dark'
    return redirect('/')
@app.route('/light')
def light_theem():
    session['theem'] = 'light'
    return redirect('/')
@app.route('/secret/<string:log>')
def secret(log):
    if 'secret_id' not in session or not session['secret_id']:
        return redirect('/')
    return render_template('secret_page.html', log=log)
@app.route('/secret_key/<string:log>', methods=['POST'])
def secret_key(log):
    pasw = request.form.get('pasw')
    if pasw == 'Ilusha12!':
        session['name'] = log
        return redirect('/')
    return render_template('secret_page.html', mis=1, log=log)

if __name__ == '__main__':
    app.run(debug=True, port=8080)

весь проект находится в папке progect. в папке static будут находиться картинки, которые мне потребуется скачать. в папке templates находятся html коды страниц сайта. перечисляю:
по расположению /project/templates/base_dark.html находится код:
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        {% block tit %}{% endblock %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
        rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" 
        crossorigin="anonymous">
        <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
        crossorigin="anonymous">
        </script>
        <style>
            .navbar {background-color: #3a2d74; padding: 10px;}
            .navbar a {color: white; text-decoration: none; margin: 0 10px;}
            .navbar a:hover {color: #c2cdf8;}
            .profile-container {max-width: 1200px; margin: 0 auto; padding: 20px;}
            .profile-header {text-align: center; margin-bottom: 20px;}
            .header-image {width: 100%; height: auto;}
            .profile-photo img {border-radius: 50%; width: 150px; height: 150px;}
            .profile-info {text-align: center; margin: 20px 0;}
            .section-buttons {text-align: center; margin: 20px 0;}
            .btn {margin: 5px; padding: 10px 20px; background-color: #3a2d74; color: white; border: none; border-radius: 5px; cursor: pointer;}
            .btn:hover {background-color: #6786f3;}
        </style>
    </head>
    <body style="background-color: #020714;">
        <div class="navbar">
            <a href="/">Главная страница</a>
            <a href="/math">Математика</a>
            <a href="/music">Музыка</a>
            <a href="/plants">Растениеводство</a>
            {% if name!="[имя не определено]" %}
                <a href="/logout">Стать инкогнито</a>
            {% else %}
                <a href="/login">Указать имя</a>
            {% endif %}
        </div>
        {% block content %}{% endblock %}
    </body>
</html>

по расположению /project/templates/base_light.html находится код:
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        {% block tit %}{% endblock %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
        rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" 
        crossorigin="anonymous">
        <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
        crossorigin="anonymous">
        </script>
        <style>
            .navbar {background-color: #6786f3; padding: 10px;}
            .navbar a {color: white; text-decoration: none; margin: 0 10px;}
            .navbar a:hover {color: #c2cdf8;}
            .profile-container {max-width: 1200px; margin: 0 auto; padding: 20px;}
            .profile-header {text-align: center; margin-bottom: 20px;}
            .header-image {width: 100%; height: auto;}
            .profile-photo img {border-radius: 50%; width: 150px; height: 150px;}
            .profile-info {text-align: center; margin: 20px 0;}
            .section-buttons {text-align: center; margin: 20px 0;}
            .btn {margin: 5px; padding: 10px 20px; background-color: #6786f3; color: white; border: none; border-radius: 5px; cursor: pointer;}
            .btn:hover {background-color: #3a2d74;}
        </style>
    </head>
    <body style="background-color: #c2cdf8;">
        <div class="navbar">
            <a href="/">Главная страница</a>
            <a href="/math">Математика</a>
            <a href="/music">Музыка</a>
            <a href="/plants">Растениеводство</a>
            {% if name!="[имя не определено]" %}
                <a href="/logout">Стать инкогнито</a>
            {% else %}
                <a href="/login">Указать имя</a>
            {% endif %}
        </div>
        {% block content %}{% endblock %}
    </body>
</html>

по расположению /project/templates/first_page.html находится код:
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        {% block tit %}{% endblock %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
        rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" 
        crossorigin="anonymous">
        <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
        crossorigin="anonymous">
        </script>
        <style>
            .first-page-container {background-image: url('https://via.placeholder.com/1200x200'); background-size: cover; background-position: center; height: 100vh; display: flex; align-items: center; justify-content: center; text-align: center;}
            .first-page-content {background-color: rgba(215, 250, 228, 0.8); padding: 20px; border-radius: 10px; max-width: 800px;}
            .first-page-content h1 {color: #4a4a4a;}
            .first-page-buttons {margin-top: 20px;}
            .first-page-buttons .btn {margin: 10px; padding: 10px 20px; background-color: #72ec62; color: white; border: none; border-radius: 5px; cursor: pointer;}
            .first-page-buttons .btn:hover {background-color: #5ac54a;}
        </style>
    </head>
    <body style="background-color: #c2cdf8;">
        <div class="first-page-container">
            <div class="first-page-content">
                <h1>Это сайт Евгении Владимировны. Здесь вы можете увидеть достижения своих детей и узнать домашнее задание на предстоящий урок.</h1>
                <div class="first-page-buttons">
                    <a href="/login"><button class="btn">Перейти на сайт с авторизацией</button></a>
                    <a href="/"><button class="btn">Перейти на сайт без авторизации</button></a>
                </div>
            </div>
        </div>
    </body>
</html>

по расположению /project/templates/grupp.html находится код:
{% if theem=='dark' %}
{% extends 'base_dark.html' %}
{% else %}
{% extends 'base_light.html' %}
{% endif %}
{% block tit %}<title>{{tit}}</title>{% endblock %}
{% block content %}
<div class="group-container">
    <h2>{{tit}}</h2>
    <div class="group-content">
        {% for theme in themes %}
            <div class="theme-card">
                <h3>{{theme}}</h3>
                <a href="/gr/{{tit}}/bl/{{theme}}" class="btn">Перейти к теме</a>
            </div>
        {% endfor %}
    </div>
</div>
<style>
    .group-container {max-width: 1200px; margin: 0 auto; padding: 20px;}
    .group-content {display: flex; flex-wrap: wrap; gap: 20px;}
    .theme-card {background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); width: calc(33.333% - 20px); text-align: center;}
    .theme-card h3 {margin-bottom: 15px;}
    .theme-card .btn {background-color: #6786f3; color: white; padding: 10px 20px; border-radius: 5px; text-decoration: none;}
    .theme-card .btn:hover {background-color: #3a2d74;}
</style>
{% endblock %}

по расположению /project/templates/index.html находится код:

{% if theem=='dark' %}
{% extends 'base_dark.html' %}
{% else %}
{% extends 'base_light.html' %}
{% endif %}
{% block tit %}<title>{{tit}}</title>{% endblock %}
{% block content %}
<div class="profile-container">
    <div class="profile-header">
        <img src="https://via.placeholder.com/1200x200" alt="Тематическая картинка" class="header-image" loading="lazy">
        <div class="navigation-tabs">
            <a href="/achievements" class="tab">Достижения</a>
            <a href="/education" class="tab">Образование</a>
            <a href="/profile" class="tab active">Личная информация</a>
        </div>
    </div>
    <div class="profile-main">
        <div class="profile-photo">
            <img src="https://via.placeholder.com/150" alt="Фото Евгении Владимировны" class="profile-image" loading="lazy">
        </div>
        <div class="profile-info">
            <h2>Евгения Владимировна</h2>
            <p>Ник в Telegram: @evgenia_tutor</p>
            <p>Email: evgenia@tutor.com</p>
        </div>
        <div class="section-buttons">
            <p>Выберите раздел для перехода:</p>
            <a href="/plants" class="btn">Растениеводство</a>
            <a href="/math" class="btn">Математика</a>
            <a href="/music" class="btn">Музыка</a>
        </div>
    </div>
</div>
<div class="achievements-section">
    <h2>Достижения</h2>
    <div class="achievements-grid">
        <div class="achievement-card">
            <h3>Математика</h3>
            <p>Ученик Иванов Иван занял 1 место на олимпиаде.</p>
            <img src="https://via.placeholder.com/200" alt="Диплом по математике" loading="lazy">
        </div>
        <div class="achievement-card">
            <h3>Музыка</h3>
            <p>Детский ансамбль выступил на городском конкурсе.</p>
            <img src="https://via.placeholder.com/200" alt="Фото выступления" loading="lazy">
        </div>
    </div>
</div>
<div class="education-section">
    <h2>Образование</h2>
    <div class="education-grid">
        <div class="education-card">
            <h3>Высшее образование</h3>
            <p>Математический факультет, МГУ.</p>
            <img src="https://via.placeholder.com/200" alt="Диплом МГУ" loading="lazy">
        </div>
        <div class="education-card">
            <h3>Повышение квалификации</h3>
            <p>Курсы по методике преподавания.</p>
            <img src="https://via.placeholder.com/200" alt="Сертификат" loading="lazy">
        </div>
    </div>
</div>
<style>
    .profile-container {max-width: 1200px; margin: 0 auto; padding: 20px;}
    .profile-header {text-align: center; margin-bottom: 20px;}
    .header-image {width: 100%; height: auto;}
    .navigation-tabs {display: flex; justify-content: center; gap: 20px; margin-top: 20px;}
    .tab {padding: 10px 20px; background-color: #6786f3; color: white; text-decoration: none; border-radius: 5px;}
    .tab.active {background-color: #3a2d74;}
    .profile-main {text-align: center;}
    .profile-photo img {border-radius: 50%; width: 150px; height: 150px;}
    .profile-info {margin: 20px 0;}
    .section-buttons {margin: 20px 0;}
    .btn {margin: 5px; padding: 10px 20px; background-color: #6786f3; color: white; border: none; border-radius: 5px; cursor: pointer;}
    .btn:hover {background-color: #3a2d74;}
    .achievements-section, .education-section {max-width: 1200px; margin: 20px auto; padding: 20px;}
    .achievements-grid, .education-grid {display: flex; flex-wrap: wrap; gap: 20px;}
    .achievement-card, .education-card {background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); width: calc(50% - 20px); text-align: center;}
    .achievement-card img, .education-card img {width: 100%; height: auto; border-radius: 10px;}
</style>
{% endblock %}

по расположению /project/templates/login.html находится код:

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        {% block tit %}{% endblock %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
        rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" 
        crossorigin="anonymous">
        <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
        crossorigin="anonymous">
        </script>
        <style>
            .login-container {max-width: 600px;margin: 50px auto;padding: 20px;background-color: #7FACFA;border-radius: 10px;box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);}
            .login-container h6 {color: #8B3EF0;text-align: center;}
            .login-container input {width: 100%;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-radius: 5px;}
            .login-container button {width: 100%;padding: 10px;background-color: #513EF0;color: white;border: none;border-radius: 5px;cursor: pointer;}
            .login-container button:hover {background-color: #3a2d74;}
            .alert {margin-top: 10px;}
        </style>
    </head>
    <body style="background-color: #c2cdf8;">
        <div class="login-container">
            <h6>Чтобы написать отзыв, нужно указать своё имя и фамилию.</h6>
            <h6>Введите пожалуйста своё ФИО:</h6>
            <form action="/login" method="post">
                <input name="log" type="text" placeholder="Введите ваше ФИО" />
                <button type="submit">Войти</button>
            </form>
            {% if mis==1 %}
                <div class="alert alert-warning" role="alert">Поле не должно быть пустым</div>
            {% endif %}
            <form action="/">
                <button type="submit">Войти инкогнито</button>
            </form>
        </div>
    </body>
</html>

по расположению /project/templates/block.html находится код:

{% if theem=='dark' %}
{% extends 'base_dark.html' %}
{% else %}
{% extends 'base_light.html' %}
{% endif %}
{% block tit %}<title>{{tit}}</title>{% endblock %}
{% block content %}
<div class="block-container">
    <h2>{{block}}</h2>
    <div class="images-grid">
        {% for image in img %}
            <img src="{{image}}" alt="Фото" class="block-image" loading="lazy">
        {% endfor %}
    </div>
    <div class="homework">
        <h3>Домашнее задание</h3>
        <ul>
            {% for task in hw %}
                <li>{{task}}</li>
            {% endfor %}
        </ul>
    </div>
</div>
<style>
    .block-container {max-width: 1200px;margin: 20px auto;padding: 20px;}
    .images-grid {display: flex;flex-wrap: wrap;gap: 20px;}
    .block-image {width: calc(33.333% - 20px);height: auto;border-radius: 10px;}
    .homework {margin-top: 20px;}
    @media (max-width: 768px) {.block-image {width: 100%;}}
</style>
{% endblock %}

по расположению /project/templates/secret_page.html находится код:

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        {% block tit %}{% endblock %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
        rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" 
        crossorigin="anonymous">
        <script 
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" 
        crossorigin="anonymous">
        </script>
        <style>
            .secret-container {max-width: 600px;margin: 50px auto;padding: 20px;background-color: #7FACFA;border-radius: 10px;box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);}
            .secret-container h6 {color: #8B3EF0;text-align: center;}
            .secret-container input {width: 100%;padding: 10px;margin: 10px 0;border: 1px solid #ccc;border-radius: 5px;}
            .secret-container button {width: 100%;padding: 10px;background-color: #513EF0;color: white;border: none;border-radius: 5px;cursor: pointer;}
            .secret-container button:hover {background-color: #3a2d74;}
            .alert {margin-top: 10px;}
        </style>
    </head>
    <body style="background-color: #c2cdf8;">
        <div class="secret-container">
            <h6>Вы назвались именем админа.</h6>
            <h6>Введите пожалуйста пароль.</h6>
            <form action="/secret_key/{{log}}" method="post">
                <input name="pasw" type="password" placeholder="Введите пароль" />
                <button type="submit">Войти</button>
            </form>
            {% if mis==1 %}
                <div class="alert alert-warning" role="alert">Пароль не верный</div>
            {% endif %}
            <form action="/login">
                <button type="submit">Я не админ</button>
            </form>
        </div>
    </body>
</html>

Измени стили на более современные измени index.html по следующим критериям:
Профиль Евгении является центральным элементом сайта, через который осуществляется переход между тремя основными разделами: *растениеводство*, *математика* и *музыка*. Профиль состоит из нескольких ключевых блоков:
# 1. *Верхняя часть профиля*
- Верхняя часть сайта оформлена тематической картинкой (шириной 2 см), которая символизирует переплетение трёх направлений: растениеводства, музыки и математики.
- Здесь же расположены вкладки для навигации:
  - *Достижения* (информация о профессиональных и личных успехах Евгении и её учеников).
  - *Образование* (сведения о её образовании, квалификации и дипломах).
  - *Личная информация* (активная вкладка, если пользователь находится в профиле).
# 2. *Центральная часть профиля*
- В центре, чуть ниже верхней части, находится круглый элемент диаметром 3 см с фотографией Евгении.
- Под фотографией расположена *карточка с данными*, которая занимает всю ширину страницы. Данные отображаются в следующем порядке:
  - ФИО Евгении.
  - Ник в Telegram.
  - Адрес электронной почты.
- Через одну строчку (с поясняющим текстом, например, "Выберите раздел для перехода") находятся *две кнопки* для перехода в другие разделы сайта. Названия кнопок зависят от текущего раздела:
  - Если пользователь находится в разделе *музыки*, кнопки будут называться: *Растениеводство* и *Математика*.
  - Если пользователь находится в разделе *математики*, кнопки будут называться: *Растениеводство* и *Музыка*.
  - Если пользователь находится в разделе *растениеводства*, кнопки будут называться: *Математика* и *Музыка*.
# 3. *Раздел "Достижения"*
- Раздел разделён по ширине на две карточки:
  - *Левая карточка*: Здесь отображаются достижения учеников Евгении и её личные успехи в сфере *математики*. Записи сортируются по дате.
  - *Правая карточка*: Здесь отображаются достижения в сфере *музыки* (например, успехи групп из детского сада, где Евгения работает музыкальным руководителем). Записи также сортируются по дате.
# 4. *Раздел "Образование"*
- В верхней части раздела, после тематической облицовки (2 см в стиле объединения музыки, математики и растениеводства), размещена *фраза Евгении Владимировны*. Рядом с фразой находится круглый элемент диаметром 1 см с её фотографией, оформленный в стиле "чат".
- Ниже прикреплены *фото дипломов* и сертификатов:
  - Каждое фото подписано, например:  
    - [Фото диплома по математике]  
    - "Высшее образование по математике".
  - Также могут быть добавлены дипломы о повышении квалификации или других достижениях.
     
После изменения кода каждого файла (в server.py в основном бэкэнд, в файлах типа html в основном стили (но для эфективности без удаления функций можешь с комментарием заменить несколько строк кода)) обязательно отправь мне весь каждый изменённый файл или причину, почему файл не был изменён.
Несколько найденых мною ошибок:
я полазил по сайту и понял что он не доделан:
я, нашёл несколько несоответствий в дизайне и расположении кнопок. На присланных мною картинках числами обозначено то, что нужно исправить:
1)кнопка (указать Имя) должна быть одна на странице и располагаться в правом нижнем углу
2)кнопка (главная страница) должна вести на главную страницу предмета, на котором располагается пользователь, а не на страничку Евгении
3)верхней панели с выбором (главная страница), (математика), (музыка), (растеневодство) и (указать имя) не должно существовать вовсе!
4)кнопки (Личная информация), (Образование) и (достижения) должны располагаться именно в таком порядке, как я написал в этом предложении и быть КНОПКАМИ. Эти кнопки должны располагаться в нутри тематической картинки. А так-же, когда пользователь просматривает информацию о Евгении в разделе какой-либо из кнопок, кнопка должна выделяться, что-бы показать пользователю, где он находится. (по умолчанию выделяется кнопка (личная информация), так как, когда пользователь проходит на страницу Евгении, по умолчанию он переходит на личную информацию). так-же переключать эти кнопки можно без перезагрузки страницы, так как это - frontend.
5)тематическая картинка отсутствует. Вставь рабочую ссылку в код
6)все кнопки кроме кнопки (указать имя) ведут на страницу 404. это надо исправить. (это число относится почти ко всему сайту, посему цифры 6 на картинках нет)
7)дизайн кнопок ужасен!!! сделай эти кнопки поменьше. Так-же я встроил в код пробный пароль 'Ilusha12!', но он почему-то не работает. Исправь и это тоже.
так-же:
дизайн - хуже некуда. Такое ощущение, что его делал человек, не смыслящий в дизайне вовсе (тоесть я). Сильно улучши его. Дизайн должен выглядеть проффесионально
картинки не открываются на сайте. найди подходящие по выбранному тобою стилю и вставь их (за исключением личных фото Евгении, её дипломов и достижений). В первую очередь я говорю про тематическую картинку с верху в файле index.html
так-же добавь следующие дополнительные функции на сайт:
1)Админ может взаимодействовать с сайтом. он может загружать новые дипломы и темы в предмет. он может их изменять и удалять. всё это записывается в базы данных. при этом фото дипломов можно как скачать на сервер на прямую, так и вставить ссылку на картинку.
после того, как сделаешь всё, что выше, оптимизируй код. убери лишние пробелы (условно замени ' = ' и на '=' и тому подобное) и убери лишние фнкции, которые ничего не делают (ВАЖНО! ТОЛЬКО ЕСЛИ ОНИ НИЧЕГО НЕ ДЕЛАЮТ В РАМКАХ ЗАДУМКИ ПРОЕКТА, ЭСЛИ ТЫ УДАЛИШЬ ЧТО-ТО ВАЖНОЕ - Я ОБИЖУСЬ).так-же сделай больше фронтенда и меньше файлов html. Не страшно, если несколько html файлов будут большими. Главное, что в сумме всех символов на всех html файлах стало меньше.
после действий сверху напиши мне, что ты их сделал и не скидывай код. я попрошу тебя о чём то ещё, и ТОЛЬКО когда попрошу скинуть код, напиши мне кол-во строчек, которое составляет и пришли код.      